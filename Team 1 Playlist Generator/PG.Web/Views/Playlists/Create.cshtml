@model PlaylistGeneratorViewModel
@{
    ViewData["Title"] = "Create";
}

<div class="d-flex flex-column align-items-center">
    <form asp-controller="Playlists" asp-action="Create" method="post" id="form-playlist">
        <div class="d-flex flex-column align-items-center card mt-5">
            <div class="card-body">
                <h5 class="rounded" id="generate-playlist-topleft">
                    Generate playlist
                </h5>

                <p class="card-text">Travel Information:</p>
                <div class="input-group mb-3">
                    <div class="input-group-prepend">
                        <p class="input-group-text">From:</p>
                        <input asp-for="@Model.StartLocation" type="text" class="form-control" aria-describedby="button-addon2" required /> @*id="search_input"*@
                    </div>
                    <span asp-validation-for="@Model.StartLocation" class="text-danger"></span> @*id="search_input2"*@
                </div>
                <div class="input-group mb-3">
                    <div class="input-group-prepend">
                        <p class="input-group-text">To:</p>
                        <input asp-for="@Model.EndLocation" type="text" class="form-control" aria-describedby="button-addon2" required>
                    </div>
                    <span asp-validation-for="@Model.EndLocation" class="text-danger"></span>
                </div>
                <div class="form-group" id="no-margin-bottom">
                    <label asp-for="@Model.PlaylistName"></label>
                    <input asp-for="@Model.PlaylistName" class="form-control" required />
                    <span asp-validation-for="@Model.PlaylistName" class="text-danger"></span>
                </div>
                <div>
                    <span>Metal:   </span>
                    <input type="range" id="rangeInput" asp-for="@Model.Metal" min="@ViewBag.MinPlaylistDuration" max="@ViewBag.MaxPlaylistDuration" step="1"
                           oninput="amount.value=rangeInput.value + '%'">
                    <output id="amount" name="amount" for="rangeInput sec">0 %</output>
                </div>
                <div>
                    <span>Rock:    </span>
                    <input type="range" id="rangeInput2" asp-for="@Model.Rock" min="@ViewBag.MinPlaylistDuration" max="@ViewBag.MaxPlaylistDuration" step="1"
                           oninput="amount2.value=rangeInput2.value + '%'">
                    <output id="amount2" name="amount2" for="rangeInput2 sec">0 %</output>
                </div>
                <div>
                    <span>Pop:     </span>
                    <input type="range" id="rangeInput3" asp-for="@Model.Pop" min="@ViewBag.MinPlaylistDuration" max="@ViewBag.MaxPlaylistDuration" step="1"
                           oninput="amount3.value=rangeInput3.value + '%'">
                    <output id="amount3" name="amount3" for="rangeInput3 sec">0 %</output>
                </div>
                <div id="last-genre">
                    <span>Pop-Folk:</span>
                    <input type="range" id="rangeInput4" asp-for="@Model.Chalga" min="@ViewBag.MinPlaylistDuration" max="@ViewBag.MaxPlaylistDuration" step="1"
                           oninput="amount4.value=rangeInput4.value + '%'">
                    <output id="amount4" name="amount4" for="rangeInput4 sec">0 %</output>
                </div>
                <span id="top-tracks">Top tracks:</span>
                @Html.EditorFor(x => x.TopTracks)

                <span id="same-artist">Same artist:</span>
                @Html.EditorFor(x => x.SameArtist)
            </div>
            <button type="submit" class="btn btn-dark" id="button-playlist-form">Generate</button>
        </div>
    </form>
</div>


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}


<script>


    $('input[type=range]').wrap("<div class='range'></div>");
    var i = 1;

    $('.range').each(function () {
        var n = this.getElementsByTagName('input')[0].value;
        var x = (n / 100) * (this.getElementsByTagName('input')[0].offsetWidth - 8) - 12;
        this.id = 'range' + i;
        if (this.getElementsByTagName('input')[0].value == 0) {
            this.className = "range"
        } else {
            this.className = "range rangeM"
        }
        this.innerHTML += "<style>#" + this.id + " input[type=range]::-webkit-slider-runnable-track {background:linear-gradient(to right, #b1872d 0%, #b1872d " + n + "%, #515151 " + n + "%)} #" + this.id + ":hover input[type=range]:before{content:'" + n + "'!important;left: " + x + "px;} #" + this.id + ":hover input[type=range]:after{left: " + x + "px}</style>";
        i++
    });

    $('input[type=range]').on("input", function () {
        var a = this.value;
        var p = (a / 100) * (this.offsetWidth - 8) - 12;
        if (a == 0) {
            this.parentNode.className = "range"
        } else {
            this.parentNode.className = "range rangeM"
        }
        this.parentNode.getElementsByTagName('style')[0].innerHTML += "#" + this.parentNode.id + " input[type=range]::-webkit-slider-runnable-track {background:linear-gradient(to right, #b1872d 0%, #b1872d " + a + "%, #515151 " + a + "%)} #" + this.parentNode.id + ":hover input[type=range]:before{content:'" + a + "'!important;left: " + p + "px;} #" + this.parentNode.id + ":hover input[type=range]:after{left: " + p + "px}";
    })
</script>
