@model PlaylistGeneratorViewModel
@{
    ViewData["Title"] = "Create";
}

<div class="d-flex flex-column align-items-center">
    <form asp-controller="Playlists" asp-action="Create" method="post" style="font-family: 'Arial Black', Gadget, sans-serif;">
        <div class="d-flex flex-column align-items-center card mt-5" style="background-color: #b8b8b8;width:25rem">
            <div class="card-body">
                <h5 class="rounded" style="
                           position: absolute;
                           margin-top: -35px;
                           margin-left: -50px;
                           background: #b1872d;
                           padding: 5px 10px;
                           color: #fff;
                          ">
                    Generate playlist
                </h5>


                <p class="card-text">Travel Information:</p>
                <div class="input-group mb-3">
                    <div class="input-group-prepend">
                        <p class="input-group-text">From:</p>
                        <input asp-for="@Model.StartLocation" type="text" id="search_input" class="form-control" aria-describedby="button-addon2" required />
                    </div>
                    <span asp-validation-for="@Model.StartLocation" class="text-danger"></span>
                </div>


                <div class="input-group mb-3">
                    <div class="input-group-prepend">
                        <p class="input-group-text">To:</p>
                        <input asp-for="@Model.EndLocation" id="search_input2" type="text" class="form-control" aria-describedby="button-addon2" required>
                    </div>
                    <span asp-validation-for="@Model.EndLocation" class="text-danger"></span>
                </div>

                <div class="form-group" style="margin-bottom: 0px;">
                    <label asp-for="@Model.PlaylistName"></label>
                    <input asp-for="@Model.PlaylistName" class="form-control" required />
                    <span asp-validation-for="@Model.PlaylistName" class="text-danger"></span>
                </div>


                <div>
                    <span>Metal: </span>
                    <input type="range" id="rangeInput" asp-for="@Model.Metal" min="@ViewBag.MinPlaylistDuration" max="@ViewBag.MaxPlaylistDuration" step="1"
                           oninput="amount.value=rangeInput.value + '%'">
                    <output id="amount" name="amount" for="rangeInput sec">@ViewBag.MaxPlaylistDuration</output>
                </div>
                <div>
                    <span>Rock:  </span>
                    <input type="range" id="rangeInput2" asp-for="@Model.Rock" min="@ViewBag.MinPlaylistDuration" max="@ViewBag.MaxPlaylistDuration" step="1"
                           oninput="amount2.value=rangeInput2.value + '%'">
                    <output id="amount2" name="amount2" for="rangeInput2 sec">@ViewBag.MaxPlaylistDuration</output>
                </div>
                <div>
                    <span>Pop:   </span>
                    <input type="range" id="rangeInput3" asp-for="@Model.Pop" min="@ViewBag.MinPlaylistDuration" max="@ViewBag.MaxPlaylistDuration" step="1"
                           oninput="amount3.value=rangeInput3.value + '%'">
                    <output id="amount3" name="amount3" for="rangeInput3 sec">@ViewBag.MaxPlaylistDuration</output>
                </div>
                <div style="padding-bottom: 1vw;">
                    <span>Chalga:</span>
                    <input type="range" id="rangeInput4" asp-for="@Model.Chalga" min="@ViewBag.MinPlaylistDuration" max="@ViewBag.MaxPlaylistDuration" step="1"
                           oninput="amount4.value=rangeInput4.value + '%'">
                    <output id="amount4" name="amount4" for="rangeInput4 sec">@ViewBag.MaxPlaylistDuration</output>
                </div>
                <span style="margin-left: 1.5vw;">Top tracks:</span>
                @Html.EditorFor(x => x.TopTracks)
                <span style="margin-left: 3vw;">Same artist:</span>
                @Html.EditorFor(x => x.SameArtist)
            </div>
            <div style="display:grid; grid-template-columns: 1fr 1fr; ">

            </div>
            <button type="submit" class="btn btn-primary"
                    style="position:relative;
                           background: #b1872d;
                           padding: 5px 10px;
                           color: #fff;
                           margin-top: 2vh;
                           margin-bottom: 1vh;
                      ">
                Generate
            </button>
        </div>
    </form>
</div>


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
<style>
    .range {
        display: inline-block;
        margin: 36px 20px 20px
    }

    input[type=range] {
        -webkit-appearance: none;
        position: relative
    }

        input[type=range]::-webkit-slider-runnable-track {
            width: 300px;
            height: 2px;
            border: none;
            border-radius: 3px
        }

        input[type=range]::-webkit-slider-thumb {
            -webkit-appearance: none;
            border: none;
            height: 12px;
            width: 12px;
            border-radius: 510%;
            background: #141414;
            border: 2px solid #515151;
            margin-top: -5px;
            cursor: pointer
        }

    .focused::-webkit-slider-thumb {
        box-shadow: 0 0 0 10px rgba(255, 255, 255, 0.15)
    }

    .clicked::-webkit-slider-thumb {
        -webkit-transform: scale(1.5)
    }

    .disabled::-webkit-slider-thumb {
        -webkit-transform: scale(0.9);
        box-shadow: 0 0 0 3px #141414;
        background: #515151 !important;
        border-color: #515151 !important
    }

    input[type=range]:focus {
        outline: none
    }

    .rangeM input[type=range].disabled::-webkit-slider-runnable-track {
        background: #515151 !important
    }

    .rangeM input[type=range]::-webkit-slider-thumb {
        background: #393436;
        border-color: #393436
    }

    .range:hover input[type=range]:before {
        color: white;
        content: '50';
        position: absolute;
        font-family: Roboto Slab;
        top: -49px;
        background: #393436;
        padding: 8px 0 3px;
        font-size: 14px;
        width: 30px;
        text-align: center;
        border-radius: 100% 100% 0 0
    }

    .range:hover input[type=range]:after {
        content: '';
        position: absolute;
        top: -19px;
        left: 50px;
        border-left: 15px solid transparent;
        border-right: 15px solid transparent;
        border-top: 8px solid #393436;
        font-family: Roboto Slab
    }
</style>


<script>


    $('input[type=range]').wrap("<div class='range'></div>");
    var i = 1;

    $('.range').each(function () {
        var n = this.getElementsByTagName('input')[0].value;
        var x = (n / 100) * (this.getElementsByTagName('input')[0].offsetWidth - 8) - 12;
        this.id = 'range' + i;
        if (this.getElementsByTagName('input')[0].value == 0) {
            this.className = "range"
        } else {
            this.className = "range rangeM"
        }
        this.innerHTML += "<style>#" + this.id + " input[type=range]::-webkit-slider-runnable-track {background:linear-gradient(to right, #b1872d 0%, #b1872d " + n + "%, #515151 " + n + "%)} #" + this.id + ":hover input[type=range]:before{content:'" + n + "'!important;left: " + x + "px;} #" + this.id + ":hover input[type=range]:after{left: " + x + "px}</style>";
        i++
    });

    $('input[type=range]').on("input", function () {
        var a = this.value;
        var p = (a / 100) * (this.offsetWidth - 8) - 12;
        if (a == 0) {
            this.parentNode.className = "range"
        } else {
            this.parentNode.className = "range rangeM"
        }
        this.parentNode.getElementsByTagName('style')[0].innerHTML += "#" + this.parentNode.id + " input[type=range]::-webkit-slider-runnable-track {background:linear-gradient(to right, #b1872d 0%, #b1872d " + a + "%, #515151 " + a + "%)} #" + this.parentNode.id + ":hover input[type=range]:before{content:'" + a + "'!important;left: " + p + "px;} #" + this.parentNode.id + ":hover input[type=range]:after{left: " + p + "px}";
    })














    var searchInput = 'search_input';
    var searchInput2 = 'search_input2';

    $(document).ready(function () {
        var autocomplete;
        autocomplete = new google.maps.places.Autocomplete((document.getElementById(searchInput)), {
            types: ['geocode'],
        });

        google.maps.event.addListener(autocomplete, 'place_changed', function () {
            var near_place = autocomplete.getPlace();
        });
    });


    $(document).ready(function () {
        var autocomplete;
        autocomplete = new google.maps.places.Autocomplete((document.getElementById(searchInput2)), {
            types: ['geocode'],
        });

        google.maps.event.addListener(autocomplete, 'place_changed', function () {
            var near_place = autocomplete.getPlace();
        });
    });
</script>
